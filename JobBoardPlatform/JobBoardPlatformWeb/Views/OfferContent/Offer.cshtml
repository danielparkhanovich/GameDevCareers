@using JobBoardPlatform.PL.Controllers.Presenters;

@model OfferContentViewModel
@{
    ViewData["Title"] = $"{Model.Display.JobTitle} for {Model.Display.CompanyName}";
    var offerDescription = Model.Display;

    var currentUri = new Uri($"{this.Context.Request.Scheme}://{this.Context.Request.Host}{this.Context.Request.Path}{this.Context.Request.QueryString}");

    var backgroundColorFrom = Model.Display.MainTechnologyWidget.BackgroundColorFrom;
    var backgroundColorTo = Model.Display.MainTechnologyWidget.BackgroundColorTo;

    var backgroundColorFromStr = $"rgba({backgroundColorFrom.R}, {backgroundColorFrom.G}, {backgroundColorFrom.B}, 0.85)";
    var backgroundColorToStr = $"rgba({backgroundColorTo.R}, {backgroundColorTo.G}, {backgroundColorTo.B}, 0.85)";
    var backgroundImgPath = StaticFilesUtils.PathToOfferContentBackground;

    bool isFullyRemote = offerDescription.WorkLocationType == WorkLocationTypeEnum.FullyRemote.ToString();
    bool isTechKeywords = offerDescription.TechKeywords != null && offerDescription.TechKeywords.Count() > 0;
    bool isExternalForm = offerDescription.ContactForm == ContactTypeEnum.ExternalForm.ToString();
    bool isCompanyHasWebsite = !string.IsNullOrEmpty(Model.Display.CompanyWebsiteUrl);

    bool isProcessingInFutureClause = !string.IsNullOrEmpty(offerDescription.ProcessingDataInFutureClause);
    bool isCustomConsentClause = !string.IsNullOrEmpty(offerDescription.CustomConsentClause);

    var application = Model.Update;
}

<div class="container px-5 py-5">
    <div class="bg-opacity-75 rounded" style="background-image: linear-gradient(90deg, @(backgroundColorFromStr) 0%, @(backgroundColorToStr) 100%), url(@(backgroundImgPath));">
        <!-- go back button -->
        <button class="btn btn-sm btn-secondary" onclick="javascript:window.history.back();">
            <i class="bi bi-arrow-left"></i>
        </button>
        <!-- header card content -->
        <div class="px-5 pb-4 mb-4">
        <div class="d-flex flex-row">
            <div class="d-flex flex-column mt-4">
                <div class="bg-white bg-opacity-10 rounded p-2">
                    <div class="bg-white bg-opacity-25 rounded p-2">
                        <div class="bg-white rounded p-3">
                            <img src=@offerDescription.CompanyImageUrl width="75" height="75" class="border border-secondary rounded" style="object-fit:contain;">
                        </div>
                    </div>
                </div>
            </div>
            <!-- Title with description & share btn. date etc. -->
            <div class="d-flex flex-row justify-content-between w-100">
                <div class="d-flex flex-column justify-content-center mx-4">
                    <h3 class="text-light mt-4">@offerDescription.JobTitle</h3>
                    <div class="d-flex flex-row mb-2">
                        <i class="bi bi-buildings text-light"></i>
                        @if (isCompanyHasWebsite)
                        {
                            <a class="text-light mx-2 text-decoration-none btn btn-primary py-0 px-1" href="@Model.Display.CompanyWebsiteUrl" target="_blank"><strong>@offerDescription.CompanyName</strong></a>
                        }
                        else
                        {
                            <div class="text-light mx-2">@offerDescription.CompanyName</div>
                        }
                    </div>
                    <div class="d-flex flex-row mb-3">
                        <i class="bi bi-geo-alt text-light"></i>
                        <div class="text-light mx-2">@offerDescription.FullAddress</div>
                        <div class="text-center rounded @(isFullyRemote ? "bg-light" : "bg-dark bg-opacity-50") px-3 mx-3">
                            <p class="small mb-0 @(isFullyRemote ? "text-primary" : "text-light") ">@offerDescription.WorkLocationTypeText</p>
                        </div>
                    </div>
                    @for (int i = 0; i < offerDescription.EmploymentDetails.Length; i++)
                    {
                        <div class="d-flex flex-row text-light mt-1">
                            <h5 class="text-light">@offerDescription.SalaryDetails[i]</h5>
                            <div class="mx-2">- @offerDescription.EmploymentDetails[i]</div>
                        </div>
                    }
                </div>
                <div class="d-flex flex-row mx-4 mt-4 align-content-start">
                    <div class="d-flex flex-row rounded text-light border border-light px-2 mb-0 justify-content-center align-self-start small">
                        <div class="ms-1 align-middle mb-0 h-100 text-truncate">@Model.Display.OfferCategory</div>
                    </div>
                    <div class="ms-2 d-flex flex-row rounded text-light border border-light px-2 mb-0 justify-content-center align-self-start small">
                        <img src="@Model.Display.MainTechnologyWidget.IconUri" width="20" height="20" />
                        <div class="ms-1 align-middle mb-0 h-100 text-truncate">@Model.Display.MainTechnologyWidget.Label</div>
                    </div>
                    <div class="ms-2 rounded text-light border border-light px-2 mb-0 justify-content-center align-self-start small">
                        <div class="align-middle mb-0 h-100 text-truncate">@Model.Display.PublishedAgo</div>
                    </div>
                    <div class="ms-2 btn btn-primary align-self-start py-0 px-2 text-center 
                                btn-copy js-tooltip js-copy" data-toggle="tooltip" data-placement="bottom" data-copy="@(currentUri)" title="Copy to clipboard">
                        <i class="bi bi-share"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="d-flex flex-row mt-2 justify-content-center">
            @if (isTechKeywords)
            {
                @foreach (var technology in offerDescription.TechKeywords!)
                {
                    <div class="d-flex flex-row justify-content-end text-center">
                        <p class="text-light text-opacity-75 small rounded-pill border border-light border-opacity-25 px-3 ms-3 my-0">@technology.ToLower()</p>
                    </div>
                }
            }
        </div>
    </div>
    </div>
    <div class="card mb-4">
        <div class="card-header bg-white h5">
            Description
        </div>
        <div class="card-body">
            @Html.Raw(System.Web.HttpUtility.HtmlDecode(offerDescription.JobDescription))
            <p class="text-muted small mt-2">
                @offerDescription.InformationClause
            </p>
        </div>
    </div>
    @if (!isExternalForm)
    {
        <div class="card">
            <div class="card-header bg-white h5">
                Apply for this job
            </div>
            <div class="card-body">
                <form method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="Update.OfferId" value="@application.OfferId" style="display:none;" />

                    <div class="row gx-3 mb-3">
                        <div class="col-md-12">
                            <label asp-for="Update.FullName" class="small mb-1" for="inputFirstAndLastName">First and last name *</label>
                            <input asp-for="Update.FullName" class="form-control" id="inputFirstAndLastName" type="text" placeholder="Enter your first and last name" value="@application.FullName">
                            <span asp-validation-for="Update.FullName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row gx-3 mb-3">
                        <div class="col-md-12">
                            <label asp-for="Update.Email" class="small mb-1" for="inputEmail">Email *</label>
                            <input asp-for="Update.Email" class="form-control" id="inputEmail" type="text" placeholder="Enter your email address" value=@application.Email>
                            <span asp-validation-for="Update.Email" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row gx-3 mb-3">
                        <div class="col-md-12">
                            <label asp-for="Update.AdditionalInformation" class="small mb-1" for="inputDescription">Introduce yourself (linkedin/github links)</label>
                            <textarea asp-for="Update.AdditionalInformation" rows="3" class="form-control" id="inputDescription" type="text" placeholder="Type something about you" 
                            value="@application.AdditionalInformation"></textarea>
                            <span asp-validation-for="Update.AdditionalInformation" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row gx-3 mb-3">
                        <div class="col-md-12">
                            @{
                                ViewData["IsPostFormOnChange"] = false;
                            }
                            @await Html.PartialAsync("./Fields/_UploadCvField", Model)
                            <span asp-validation-for="Update.AttachedResume" class="text-danger"></span>
                        </div>
                    </div>
                    @if (isProcessingInFutureClause)
                    {
                        <div class="mb-3 row gx-3 col-md-12">
                            <div>
                                <div class="form-check">
                                    <input asp-for="Update.IsProcessingDataInFutureConsent" class="form-check-input" type="checkbox">
                                    <label asp-for="Update.IsProcessingDataInFutureConsent" class="form-check-label">
                                        Processing data in future recruitment
                                    </label>
                                    <br />
                                    <span asp-validation-for="Update.IsProcessingDataInFutureConsent" class="text-danger"></span>
                                </div>
                            </div>
                            <p class="text-muted small">
                                @Model.Display.ProcessingDataInFutureClause
                            </p>
                        </div>
                    }
                    @if (isCustomConsentClause)
                    {
                        <div class="mb-3 row gx-3 col-md-12">
                            <div>
                                <div class="form-check">
                                    <input asp-for="Update.IsCustomConsent" class="form-check-input" type="checkbox">
                                    <label asp-for="Update.IsCustomConsent" class="form-check-label">
                                        @Model.Display.CustomConsentClauseTitle
                                    </label>
                                    <br />
                                    <span asp-validation-for="Update.IsCustomConsent" class="text-danger"></span>
                                </div>
                            </div>
                            <p class="text-muted small">
                                @Model.Display.CustomConsentClause
                            </p>
                        </div>
                    }
                    <!-- Submit button -->
                    <button type="submit" class="btn btn-primary btn-block px-5">Apply</button>
                </form>
            </div>
        </div>
    }
    else
    {
        <div class="d-flex flex-row justify-content-center">
            <a class="btn btn-primary w-75 px-5"
               asp-action="RedirectToExternalForm" asp-controller="OfferContent" asp-route-url="@offerDescription.ExternalFormUrl" asp-route-id="@application.OfferId" target="_blank">
                Apply
            </a>
        </div>
    }
</div>

<!--Copy to clipboard .js-tooltip .js-copy-->
@await Html.PartialAsync("./Templates/_CopyToClipboardTooltipScript")