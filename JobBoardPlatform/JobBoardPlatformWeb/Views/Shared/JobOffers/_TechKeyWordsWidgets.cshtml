
@model ITechKeywords

<div class="form-group">
    <div class="dropdown w-25 mb-4" style="position: relative">
        <input type="text" id="techInput" class="form-control" placeholder="Enter a technology e.g. Unity" autocomplete="off">
        <div id="techOptions" class="dropdown-menu w-100 rounded-0" aria-labelledby="techInput" style="max-height: 250px; overflow-y: auto;">
            <!-- Technology options will be dynamically added here -->
        </div>
    </div>
    <div id="keywordsList" class="list-group mt-2 d-flex flex-row flex-wrap bg-transparent shadow-none">
        <div id="templateTechKeyWordWidget" class="rounded-pill align-content-center justify-content-center bg-info px-2 mx-1 techKeyWord-container" style="display:none;">
            <div class="d-flex flex-row techKeyword-sub-container">
                <div class="text-light techKeyWordContent">C#</div>
                <div class="mx-1"></div>
                <button type="button" class="removeElementButton bg-transparent border-0 align-self-center">
                    <i class="bi bi-x-lg text-secondary" style="font-size: 0.8rem;"></i>
                </button>
                <input asp-for="TechKeywords" class="techKeywordValue" style="display:none;" />
            </div>
        </div>
    </div>
</div>

<script>
    var keywordsInput = document.getElementById('techInput')

    keywordsInput.addEventListener('keydown', function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            addTechKeyword(this.value);
            this.value = '';
        }
    });

    function addTechKeyword(value)
    {
        var input = value.trim();
        if (input !== '') {
            var index = document.getElementsByClassName('techKeyword-container-added').length;
            var keywordWidget = document.getElementById('templateTechKeyWordWidget');

            addNewTechnologyWidget(keywordWidget, index, input);
        }
        value = '';
    }

    function addNewTechnologyWidget(template, index, inputValue) {

        var newElement = template.cloneNode(true);

        var input = newElement.querySelector('.techKeywordValue');
        input.setAttribute("asp-for", "TechKeywords[" + index + "]");
        input.setAttribute("index-in-list", index);
        input.value = inputValue;

        var content = newElement.querySelector('.techKeyWordContent');
        content.innerHTML = inputValue;

        newElement.style.display = null;
        newElement.classList.add("techKeyword-container-added");

        var deleteButton = newElement.querySelector('.removeElementButton');
        deleteButton.addEventListener('click', function () {
            onTechnologyWidgetRemove(index);
            newElement.remove();
        });

        document.getElementById('keywordsList').appendChild(newElement);
    }

    function onTechnologyWidgetRemove(removedWidgetIndex) {

        var technologyWidgets = document.getElementsByClassName('techKeyword-container-added');
        for (var i = 0; i < technologyWidgets.length; i++) 
        {
            var input = technologyWidgets[i].querySelector('.techKeywordValue');
            var index = input.getAttribute("index-in-list");
            if (index > removedWidgetIndex)
            {
                index -= 1;
            }
            input.setAttribute("index-in-list", index);
            input.setAttribute("asp-for", "TechKeywords[" + index + "]");
        }
    }

    // Dropdown
    // TODO: replace the fixed array to request for keywords from a database
    var techOptions = [
        "C++",
        "C#",
        "Java",
        "Python",
        "JavaScript",
        "Lua",
        "Unity",
        "Unreal Engine",
        "Godot",
        "GameMaker",
        "Phaser",
        "Construct",
        "SDL",
        "SFML",
        "OpenGL",
        "DirectX",
        "HTML5",
        "CSS",
        "TypeScript",
        "React",
        "Angular",
        "Vue.js",
        "Node.js",
        "Firebase",
        "MongoDB",
        "SQLite",
        "Git",
        "Visual Studio",
        "Atom",
        "Sublime Text",
        "VS Code",
        "Blender",
        "Maya",
        "3ds Max",
        "Photoshop",
        "Illustrator",
        "GIMP",
        "Inkscape",
        "Spine",
        "DragonBones",
        "Tiled",
        "TexturePacker",
        "Audacity",
        "FMOD",
        "Wwise",
        "Playmaker",
        "Bolt",
        "Inklewriter",
        "Twine",
        "GameSparks",
        "Photon",
        "Steamworks",
        "PlayFab",
        "AppLovin",
        "AdMob"
        // Add more game development-related technologies and engines as needed
    ];

    var techInput = $('#techInput');
    var techOptionsList = $('#techOptions');
    var maxPropositions = 20; // Maximum number of propositions to display

    // Event handler for the techInput field
    techInput.on('input', function () {
        var typedValue = techInput.val().trim().toLowerCase();

        // Clear previous options
        techOptionsList.empty();

        var matchingOptions = techOptions.filter(function (option) {
            return option.toLowerCase().indexOf(typedValue) !== -1;
        });

        // Limit the number of matching options
        if (matchingOptions.length > maxPropositions) {
            matchingOptions = matchingOptions.slice(0, maxPropositions);
        }

        if (matchingOptions.length == 0)
        {
            matchingOptions.push(typedValue);
        }

        // Add matching options to the dropdown menu
        $.each(matchingOptions, function(index, option) {
            var listItem = $('<a class="dropdown-item"></a>').text(option);
            listItem.on('click', function() {
                //techInput.val(option);
                techInput.val('');
                addTechKeyword(option);
                techOptionsList.hide();
            });

            // Highlight matching letters
            var highlightedOption = highlightMatchingLetters(option, typedValue);
            listItem.html(highlightedOption);

            techOptionsList.append(listItem);
        });

        // Show/hide the dropdown menu based on matching options
        if (matchingOptions.length > 0) {
            techOptionsList.show();
        } else {
            techOptionsList.hide();
        }
    });

    // Close the dropdown menu when clicking outside of it
    $(document).on('click', function (event) {
        if (techOptionsList.is(":visible"))
        {
            techInput.val("");
        }
        if (!$(event.target).closest('.dropdown').length) {
            techOptionsList.hide();
        }
    });

    // Function to highlight matching letters
    function highlightMatchingLetters(option, typedValue) {
        var regex = new RegExp(typedValue, 'gi');
        return option.replace(regex, function(match) {
            return '<span class="text-success fw-bold">' + match + '</span>';
        });
    }
</script>