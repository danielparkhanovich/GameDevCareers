@using System.Security.Claims;
@using JobBoardPlatform.BLL.Services.Authorization.Utilities;
@using JobBoardPlatform.PL.Controllers.Profile;
@using JobBoardPlatform.PL.ViewModels.Middleware.Factories.Profile;
@{
    string? userName = User.FindFirstValue(UserSessionProperties.DisplayName);
    if (string.IsNullOrEmpty(userName))
    {
        userName = "User";
    }

    string? userImageUrl = User.FindFirstValue(UserSessionProperties.DisplayImageUrl);
    if (string.IsNullOrEmpty(userImageUrl))
    {
        userImageUrl = "https://s3.eu-central-1.amazonaws.com/bootstrapbaymisc/blog/24_days_bootstrap/fox.jpg";
    }

    string role = UserSessionUtils.GetRole(User);
    var factory = new ProfileTabsViewModelFactory(role);
    var viewModel = await factory.Create();

    var actions = viewModel.MainTabsActions;
    var controllers = viewModel.MainTabsControllers;
    var tabs = viewModel.MainTabsLabels;
}

<li class="nav-item bg-secondary border-start border-opacity-10 border-dark dropdown px-2">
    <a class="nav-link dropdown-toggle text-dark col-sm" data-bs-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
        <img src="@userImageUrl" width="40" height="40" class="rounded-circle mx-2 border border-secondary" style="object-fit:contain;">
        @userName, @role
    </a>
    <div class="dropdown-menu dropdown-menu-end mt-3">
        @for (int i = 0; i < tabs.Length; i++)
        {
            <a class="dropdown-item" asp-controller="@controllers[i]" asp-action="@actions[i]">
                <i class="bi bi-person mx-2"></i>
                @tabs[i]
            </a>
            <div class="dropdown-divider"></div>
        }
        <a class="dropdown-item" asp-controller="Home" asp-action="LogOut">
            <i class="bi bi-emoji-dizzy mx-2"></i>
            Log out
        </a>
    </div>
</li>