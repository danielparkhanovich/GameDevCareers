@using JobBoardPlatform.BLL.Search;
@using JobBoardPlatform.PL.Controllers.Offer;
@using JobBoardPlatform.PL.Controllers.Templates;

<!--sendRequestAndUpdateElement(url, elementId, callback)-->
@await Html.PartialAsync("./Templates/_UpdateHtmlElementAjaxRequestScript")

<script>
    function refreshCard(action, id, data, onSuccessCallback = null) {
        const cardId = `card-container-${id}`;
        sendRequestWithDataAndUpdateElement(action, cardId, data, onSuccessCallback);
    }

    function refreshCardsAfterRequest(action, id, data) {
        sendRequestWithData(action, data, refreshCards);
    }

    function refreshCards(onSuccessCallback = null, isPageSwitched = false) {
        if (!isPageSwitched) {
            resetPageParameter();
        }
        const refreshCardsAction = getRefreshCardsAction();
        const cardContainerId = "cards-container";
        sendRequestAndUpdateElement(refreshCardsAction, cardContainerId, onSuccessCallback);
    }

    function resetPageParameter() {
        const paramName = @Html.Raw(Json.Serialize(OfferSearchUrlParams.Page));
        updateQueryStringParameter(paramName, 1);
    }

    function getRefreshCardsAction() {
        const searchParams = new URLSearchParams(window.location.search)
        const refreshCardsAction = @Html.Raw(Json.Serialize(@Url.Action(OfferCardsControllerBase.RefreshCardsContainerAction)));
        let refreshCards = refreshCardsAction;
        refreshCards += '?' + searchParams.toString();
        return refreshCards;
    }

    function updateQueryStringParameter(key, value) {
        if (!('URLSearchParams' in window))
        {
            return;
        }

        var searchParams = new URLSearchParams(window.location.search)
        var newRelativePathQuery = window.location.pathname;

        if (value) {
            searchParams.set(key, value);
            newRelativePathQuery += '?' + searchParams.toString();
        }
        else {
            searchParams.delete(key);
            if (Array.from(searchParams).length > 0) {
                newRelativePathQuery += '?' + searchParams.toString();
            }
        }

        history.pushState(null, '', newRelativePathQuery);
    }
</script>
