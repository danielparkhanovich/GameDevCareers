@using JobBoardPlatform.PL.Controllers.Profile;
@using JobBoardPlatform.PL.Controllers.Presenters;
@using JobBoardPlatform.PL.ViewModels.Factories.Admin;
@using JobBoardPlatform.PL.ViewModels.Models.Admin;
@using JobBoardPlatform.PL.ViewModels.Models.Offer.Widgets;
@using JobBoardPlatform.BLL.Services.Offer.State;
@using JobBoardPlatform.PL.Controllers.Offer;
@using JobBoardPlatform.PL.Controllers.Templates;

@model AdminCompanyCardViewModel
@{
    var card = Model;
    int identityId = card.Id;

    string deleteUrl = $"{@Url.Action(nameof(AdminPanelCompaniesController.Delete))}";
    string logIntoUrl = $"{@Url.Action(nameof(AdminPanelCompaniesController.LogInto))}";

    bool isWebsite = !string.IsNullOrEmpty(card.CompanyWebsiteUrl);
    bool isOfficeLocation = !string.IsNullOrEmpty(card.City) && !string.IsNullOrEmpty(card.Country);
}

<div class="my-0" id=@($"card-container-{identityId}")>
    <div class="card-body d-flex border-0 shadow-sm py-2 px-2">
        <div class="d-flex flex-row align-items-center justify-content-center" style="width:100px; height:45px; overflow:hidden;">
            <img src=@card.ProfileImageUrl class="border border-secondary rounded" style="width:80%; height:100%; object-fit:contain;">
        </div>
        <div class="d-flex flex-row justify-content-between mx-2 w-100">
            <div class="d-flex flex-column">
                <div class="d-flex">
                    <div class="d-flex flex-column justify-content-center me-2">
                        @card.CompanyName
                    </div>
                </div>
                <div class="d-flex justify-content-between">
                    <div class="d-flex flex-column justify-content-center me-2 small">
                        contact email: @card.Email
                    </div>
                </div>
            </div>
            <div class="d-flex flex-row">
                <div class="d-flex flex-row align-items-center small">
                    <div class="d-flex flex-column me-1">
                        website:
                    </div>
                    @if (isWebsite)
                    {
                        <a class="p-1 me-1 small" href="@card.CompanyWebsiteUrl">
                            @card.CompanyWebsiteUrl
                        </a>
                    }
                    else
                    {
                        <div class="text-muted mx-1"><i class="bi bi-question-square"></i></div>
                    }
                </div>
                <div class="d-flex flex-row small mx-2 small">
                    <div class="d-flex flex-row align-self-center pe-3">
                        <i class="bi bi-geo-alt text-muted"></i>
                        @if (isOfficeLocation)
                        {
                            <div class="text-muted mx-1">@card.City, @card.Country</div>
                        }
                        else
                        {
                            <div class="text-muted mx-1"><i class="bi bi-question-square"></i></div>
                        }
                    </div>
                </div>
                
                <div class="d-flex justify-content-between align-items-center ms-3">
                <div class="dropdown">
                    <a class="nav-link dropdown-toggle rounded border border-primary px-2 mb-0 justify-content-center align-self-center" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                        <small>modify</small>
                    </a>
                    <div class="dropdown-menu py-0">
                        <button class="w-100 d-flex flex-row justify-content-between btn btn-outline-info btn-sm"
                                onclick="logIntoAccount(@Model.Id);">
                                <div>@("Log into account")</div>
                                <i class="bi bi-door-open ms-1"></i>
                        </button>
                        <button class="w-100 d-flex flex-row justify-content-between btn btn-outline-danger btn-sm mt-1"
                                    onclick="deleteAccount(@Model.Id);">
                                <div>@("Delete account")</div>
                                <i class="bi bi-trash ms-1"></i>
                        </button>
                    </div>
                </div>
            </div>
            </div>
        </div>
    </div>
</div>

<script>
    function logIntoAccount(cardId) {
        const action = @Html.Raw(Json.Serialize(logIntoUrl));
        const data = { userId: cardId };
        sendRequestWithDataAndUpdateElement(action, cardId, data);
    }

    function deleteAccount(cardId) {
        const action = @Html.Raw(Json.Serialize(deleteUrl));
        const data = { userId: cardId };
        sendRequestWithDataAndUpdateElement(action, cardId, data, refreshCards);
    }
</script>