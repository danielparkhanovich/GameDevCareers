@using JobBoardPlatform.PL.Controllers.Profile;
@using JobBoardPlatform.PL.Controllers.Presenters;
@using JobBoardPlatform.PL.ViewModels.Factories.Admin;
@using JobBoardPlatform.PL.ViewModels.Models.Admin;
@using JobBoardPlatform.PL.ViewModels.Models.Offer.Widgets;
@using JobBoardPlatform.BLL.Services.Offer.State;
@using JobBoardPlatform.PL.Controllers.Offer;
@using JobBoardPlatform.PL.Controllers.Templates;

@model AdminEmployeeCardViewModel
@{
    var card = Model;
    int identityId = card.Id;

    string deleteUrl = $"{@Url.Action(nameof(AdminPanelCompaniesController.Delete))}";
    string logIntoUrl = $"{@Url.Action(nameof(AdminPanelCompaniesController.LogInto))}";

    bool isName = !string.IsNullOrEmpty(Model.Name);
    bool isSurname = !string.IsNullOrEmpty(Model.Surname);
    bool isCVAttached = !string.IsNullOrEmpty(Model.AttachedResumeUrl);
    bool isLocation = !string.IsNullOrEmpty(card.City) && !string.IsNullOrEmpty(card.Country);
    bool isYearsOfExperience = !string.IsNullOrEmpty(card.YearsOfExperience);
}

<div class="my-0" id=@($"card-container-{identityId}")>
    <div class="card-body d-flex border-0 shadow-sm py-2 px-2">
        <img src=@card.ProfileImageUrl width="40" height="40" class="mx-2 border border-secondary rounded-circle">
        <div class="d-flex flex-row justify-content-between mx-2 w-100">
            <div class="d-flex flex-column">
                <div class="d-flex">
                    <div class="d-flex flex-column">
                        <div class="d-flex flex-column justify-content-center me-2">
                            <div>
                            @if (isName)
                            { 
                                @card.Name
                            }
                            else
                            {
                                <i class="bi bi-question-square"></i>
                            }

                            @if (isSurname)
                            {
                                @card.Surname
                            }
                            else
                            {
                                <i class="bi bi-question-square"></i>
                            }
                            </div>
                        </div>
                        <div class="d-flex flex-column justify-content-center me-2 small">
                            contact email: @card.Email
                        </div>
                    </div>
                </div>
            </div>
            <div class="d-flex flex-row">
                <div class="d-flex align-items-center mx-2 small text-muted">
                    <div class="me-1">years of experience: </div>
                    @if (isYearsOfExperience)
                    {
                        <div>@card.YearsOfExperience</div>
                    }
                    else
                    {
                        <i class="bi bi-question-square"></i>
                    }
                </div>
                <div class="d-flex align-items-center mx-2">
                    <div class="me-1">CV</div>
                    @if (isCVAttached)
                    {
                        <a href="@card.AttachedResumeUrl" target="_blank">
                            <i class="bi bi-file-earmark-pdf-fill h4"></i>
                        </a>
                    }
                    else
                    {
                        <i class="bi bi-question-square"></i>
                    }
                </div>
                <div class="d-flex flex-row small mx-2 small">
                    <div class="d-flex flex-row align-self-center align-items-center pe-3">
                        <i class="bi bi-geo-alt text-muted"></i>
                        @if (isLocation)
                        {
                            <div class="text-muted mx-1">@card.City, @card.Country</div>
                        }
                        else
                        {
                            <div class="text-muted mx-1"><i class="bi bi-question-square"></i></div>
                        }
                    </div>
                </div>
                <div class="d-flex justify-content-between align-items-center ms-3">
                    <div class="dropdown">
                        <a class="nav-link dropdown-toggle rounded border border-primary px-2 mb-0 justify-content-center align-self-center" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                            <small>modify</small>
                        </a>
                        <div class="dropdown-menu py-0">
                            <button class="w-100 d-flex flex-row justify-content-between btn btn-outline-info btn-sm"
                                    onclick="logIntoAccount(@Model.Id);">
                                    <div>@("Log into account")</div>
                                    <i class="bi bi-door-open ms-1"></i>
                            </button>
                            <button class="w-100 d-flex flex-row justify-content-between btn btn-outline-danger btn-sm mt-1"
                                        onclick="deleteAccount(@Model.Id);">
                                    <div>@("Delete account")</div>
                                    <i class="bi bi-trash ms-1"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function logIntoAccount(cardId) {
        const action = @Html.Raw(Json.Serialize(logIntoUrl));
        const data = { userId: cardId };
        sendRequestWithDataAndUpdateElement(action, cardId, data);
    }

    function deleteAccount(cardId) {
        const action = @Html.Raw(Json.Serialize(deleteUrl));
        const data = { userId: cardId };
        sendRequestWithDataAndUpdateElement(action, cardId, data, refreshCards);
    }
</script>